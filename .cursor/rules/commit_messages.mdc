---
description: 
globs: 
alwaysApply: true
---
# Commit Message Rules

- Commit messages should be clear, concise, and descriptive.
- Use conventional commit format: `<type>(<scope>): <description>`.
- Commit after each fix or feature (commit often).
- Example: `fix(eslint): add browser globals for renderer, migrate ignores to config, and set module type`.
- **Always stage and commit all files related to a change together.** This includes:
  - Source files (e.g., components, pages, utils)
  - Entry points (e.g., App.tsx, main.tsx)
  - Configuration files (e.g., vite.config.ts, tsconfig.json, vitest.config.ts)
  - Test files
  - When dependencies are added/removed, always include both `package.json` and `yarn.lock` in the commit.
- Do not split related changes across multiple commits unless they are logically independent.
