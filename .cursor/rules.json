{
  "version": "1.0",
  "name": "SafeTube Development Rules",
  "description": "Development rules and best practices for the SafeTube project",
  "rules": {
    "package_management": {
      "description": "Package management rules",
      "rules": [
        {
          "pattern": "package.json",
          "description": "Use Yarn as package manager",
          "severity": "error"
        },
        {
          "pattern": "yarn.lock",
          "description": "Maintain yarn.lock file",
          "severity": "error"
        },
        {
          "pattern": "**/*",
          "description": "Use yarn commands instead of npm",
          "severity": "error"
        }
      ]
    },
    "prd_workflow": {
      "description": "Rules for PRD development and tracking",
      "rules": [
        {
          "pattern": "docs/development-tracking.md",
          "description": "Development tracking document must be updated when feature status changes",
          "severity": "error"
        },
        {
          "pattern": "docs/prds/*.md",
          "description": "PRDs must be developed in order as specified in development-tracking.md",
          "severity": "error"
        },
        {
          "pattern": "docs/prds/*.md",
          "description": "Each PRD must be completed before moving to the next one",
          "severity": "error"
        },
        {
          "pattern": "docs/development-tracking.md",
          "description": "Feature dependencies must be respected in development order",
          "severity": "error"
        }
      ]
    },
    "code_organization": {
      "file_structure": {
        "description": "Rules for organizing files and directories",
        "rules": [
          {
            "pattern": "src/**/*",
            "description": "Keep related files close together in the directory structure",
            "severity": "warning"
          },
          {
            "pattern": "src/**/*.{ts,tsx}",
            "description": "Use clear, descriptive file names",
            "severity": "error"
          },
          {
            "pattern": "src/components/**/*",
            "description": "Group related components in the same directory",
            "severity": "warning"
          }
        ]
      },
      "component_organization": {
        "description": "Rules for organizing React components",
        "rules": [
          {
            "pattern": "src/components/**/*.tsx",
            "description": "One component per file",
            "severity": "error"
          },
          {
            "pattern": "src/types/**/*.ts",
            "description": "Place shared types in the types directory",
            "severity": "warning"
          }
        ]
      }
    },
    "code_style": {
      "typescript": {
        "description": "TypeScript coding standards",
        "rules": [
          {
            "pattern": "**/*.ts",
            "description": "Use strict TypeScript configuration",
            "severity": "error"
          },
          {
            "pattern": "**/*.tsx",
            "description": "Define interfaces for all props",
            "severity": "error"
          },
          {
            "pattern": "**/*.ts",
            "description": "Avoid 'any' type",
            "severity": "error"
          }
        ]
      },
      "react": {
        "description": "React coding standards",
        "rules": [
          {
            "pattern": "**/*.tsx",
            "description": "Use functional components",
            "severity": "error"
          },
          {
            "pattern": "**/*.tsx",
            "description": "Implement proper prop types",
            "severity": "error"
          }
        ]
      },
      "styling": {
        "description": "Styling standards",
        "rules": [
          {
            "pattern": "**/*.tsx",
            "description": "Use Tailwind CSS classes",
            "severity": "warning"
          },
          {
            "pattern": "**/*.tsx",
            "description": "Follow shadcn/ui component patterns",
            "severity": "warning"
          }
        ]
      }
    },
    "documentation": {
      "code_documentation": {
        "description": "Code documentation standards",
        "rules": [
          {
            "pattern": "**/*.{ts,tsx}",
            "description": "Document complex functions with JSDoc",
            "severity": "warning"
          },
          {
            "pattern": "src/**/*.tsx",
            "description": "Add comments for complex logic",
            "severity": "warning"
          }
        ]
      }
    },
    "testing": {
      "test_organization": {
        "description": "Test organization standards",
        "rules": [
          {
            "pattern": "**/*.test.{ts,tsx}",
            "description": "Keep tests close to code",
            "severity": "warning"
          },
          {
            "pattern": "**/*.test.{ts,tsx}",
            "description": "Use descriptive test names",
            "severity": "warning"
          }
        ]
      }
    },
    "security": {
      "input_validation": {
        "description": "Security standards",
        "rules": [
          {
            "pattern": "src/**/*.{ts,tsx}",
            "description": "Validate all inputs",
            "severity": "error"
          },
          {
            "pattern": "src/**/*.{ts,tsx}",
            "description": "Handle errors gracefully",
            "severity": "error"
          }
        ]
      }
    }
  },
  "ai_assistance": {
    "enabled": true,
    "capabilities": [
      "code_generation",
      "bug_fixing",
      "code_review",
      "documentation",
      "test_generation"
    ],
    "review_required": true,
    "prd_workflow": {
      "enabled": true,
      "tracking_update": true,
      "dependency_check": true
    }
  },
  "git_integration": {
    "commit_message_format": "conventional",
    "branch_naming": "feature/*",
    "require_review": true,
    "prd_tracking": {
      "update_on_status_change": true,
      "require_tracking_update": true
    }
  }
} 